Python Tuple

Python Tuple ia an ordered container.
---It the same as lists but the items of tuples cannot be changed.

"Item" can also be referred to as "elements".

==Create a Tuple
A tuple is created by using round brackets ().
The objects are placed inside those brackets and are separated by commas(,).

pets = ("dog", "cat", "rabbit")
print(pets)

==A tuple can contain mixed data types.
x = ("dog", 21, True)
print(x)

=======Indexing ==========
Indexing is used to access the items of a tuple.

Indexing use square brackets and numbers to access individual items of a tuple.

Where 0 refers to the first item,1 refers to the second item, and so on.

pets = ("dog", "cats", "rabbit")

print(pets[0])
print(pets[1])
print(pets[2])

=====Negative Indexing===========

Negative indexing is used to access the items of a tuple using negative numbers.
Where -1 refers to the last item, -2 refers to the second to the last item, and so on.

pets = ("dog", "cats", "rabbit")
print(pets[-1])
print(pets[-2])
print(pets[-3])

===========Range of Index=========
BY using a colon (:), we can access a range of items at once.
Simply separate two indexes using the colon.
Thr first is start of the range,while the second index is the end of the range(not included).
pets = ("dog", "cats", "rabbit", "hen", "goat",)
x = pets[1:3]
print(x)

--If you don't specify the first index, the range starts from index 0.
pets = ("dog", "cats", "rabbit", "hen", "goat",)
x = pets[3]
print(x)

--If you don't specify the last  index, the range ends with last item of the tuple.
in the case, the range includes the last item
pets = ("dog", "cats", "rabbit", "hen", "goat",)
x = pets[2:]
print(x)


===============Getting the length of A tuple==================
To get the length or the number of items in a tuple,use the len() method.
pets = ("dog", "cats", "rabbit", "hen", "goat",)
print(len(pets))

value = (4,6,5,7,8,9,2,3,0,)
print(len(value))

=====Looping Through a Tuple================
Looping through a tuple basically means accessing all its items one- by -one.
--The For loop is used to loop through a tuple.
pets =("dog", "goat", "hen","cow","duck")
for pet in pets:
    print(pet)
values = (4,6,5,7,8,9,2,3,0,)
for value in values
print(values)


===========Checking if an item Exists==========
To check if an item exits in a tuple, use the "in" operator
it returns True if the item is found, otherwise returns False.

pets =("dog", "cat", "rabbit")
print("dog" in pets)
print("fish" in pets)

values = (4,6,5,7,8,9,2,3,0,)
print(10 in values)
print(5 in values)


===========Another Way to Create A tuple===============
The way we created our tuple in Literal.
Another way to create a tuple is to use the tuple() constructor.

pets = tuple (("dog", "cat", "rabbit"))
print(pets)

values =tuple ((4,6,5,7,8,9,2,3,0,))
print(value)

=========Combine Tuples==============
To combine tuples, use the additions operator(+).

pets1 = ("dog", "cat", "rabbit")
pets2 = ("hen", "goat", "chicken")

all_pets = pets1 + pets2
print(all_pets)

=========# Tuples are Immutable=================
In python tuple are
print immutable(unchangeable).
it means you can not add,remove or change its items


